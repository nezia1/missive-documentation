@startuml initialize
actor Utilisateur
participant "SignalProvider" as SignalProvider
participant "NamespacedSecureStorage" as NSS
participant "SecureStoragePreKeyStore" as PreKeyStore
participant "SecureStorageSignedPreKeyStore" as SignedPreKeyStore
participant "SecureStorageSessionStore" as SessionStore
participant "SecureStorageIdentityKeyStore" as IdentityKeyStore
participant "API" as Api

SignalProvider -> NSS : Initialisation de NamespacedSecureStorage 
SignalProvider -> PreKeyStore : Initialisation de SecureStoragePreKeyStore avec NamedspacedSecureStorage
SignalProvider -> SignedPreKeyStore : Initialisation de SecureStorageSignedPreKeyStore avec NamedspacedSecureStorage
SignalProvider -> SessionStore : Initialisation de SecureStorageSessionStore avec NamedspacedSecureStorage

alt L'utilisateur installe l'application (première connexion)
        SignalProvider -> SignalProvider : generateIdentityKeyPair()
        SignalProvider -> SignalProvider : generateRegistrationId(false)
        SignalProvider -> SignalProvider : generateSignedPreKey(identityKeyPair, 0)
        SignalProvider -> SignedPreKeyStore : storeSignedPreKey(id, signedPreKey)
        SignalProvider -> IdentityKeyStore : fromIdentityKeyPair(NSS, identityKeyPair, registrationId)
        SignalProvider -> SignalProvider : Génère une centaine de pré clés
        loop Pour chaque clé pré-générée
            SignalProvider -> PreKeyStore : storePreKey(p.id, p)
        end
        SignalProvider -> Api : POST /users/$name/keys avec les données des clés
else
    SignalProvider -> IdentityKeyStore : Initialise SecureStorageIdentityKeyStore avec NameSpacedSecureStorage
end
@enduml
